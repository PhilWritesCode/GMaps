// Generated by CoffeeScript 1.8.0
(function() {
  var gems, meetupApp,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  meetupApp = angular.module('meetupApp', ['AngularGM']);

  meetupApp.factory('locationService', function() {
    this.geocoder = new google.maps.Geocoder();
    this.locations = [];
    this.processLocation = (function(_this) {
      return function(location, locations, refresh) {
        return _this.geocoder.geocode({
          address: location
        }, function(results, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            locations.push(results[0]);
            return refresh();
          } else {
            return alert("Failed!  Status: " + status);
          }
        });
      };
    })(this);
    this.getLocations = (function(_this) {
      return function() {
        return _this.locations;
      };
    })(this);
    this.addLocation = (function(_this) {
      return function(location, refresh) {
        return _this.processLocation(location, _this.locations, refresh);
      };
    })(this);
    return {
      getLocations: this.getLocations,
      addLocation: this.addLocation
    };
  });

  meetupApp.controller('MeetupController', function($scope, locationService) {
    this.products = gems;
    return this.locations = locationService.getLocations();
  });

  meetupApp.controller('LocationEntryController', function($scope, locationService) {
    this.formEntry;
    this.usedEntries = [];
    this.addLocation = function() {
      var _ref;
      if (this.formEntry && (_ref = this.formEntry, __indexOf.call(this.usedEntries, _ref) < 0)) {
        locationService.addLocation(this.formEntry, this.refresh);
        this.usedEntries.push(this.formEntry);
      }
      return this.formEntry = "";
    };
    return this.refresh = (function(_this) {
      return function() {
        return $scope.$apply();
      };
    })(this);
  });

  meetupApp.controller('MapController', function($scope, locationService) {
    this.locations = locationService.getLocations();
    $scope.center = new google.maps.LatLng(45, -73);
    this.mapOptions = {
      map: {
        center: new google.maps.LatLng(45, -73),
        zoom: 6,
        mapTypeId: google.maps.MapTypeId.TERRAIN
      }
    };
    this.marker = {
      id: 0,
      coords: {
        latitude: 45,
        longitude: -73
      },
      options: {
        draggable: true
      }
    };
    this.buildIcon = function(iconURL) {
      return {
        anchor: new google.maps.Point(16, 32),
        size: new google.maps.Size(32, 32),
        url: iconURL
      };
    };
    return this.icons = {
      location: this.buildIcon("https://maps.google.com/mapfiles/ms/icons/blue-dot.png"),
      between: this.buildIcon("https://maps.google.com/mapfiles/ms/icons/green-dot.png"),
      search: this.buildIcon("https://maps.google.com/mapfiles/ms/icons/yellow-dot.png")
    };
  });

  gems = [
    {
      name: 'Dodecahedron',
      price: 2.95,
      description: 'Here is some nonsensical description text',
      reviews: [],
      canPurchase: true,
      soldOut: true
    }, {
      name: 'Pentagonal Gem',
      price: 5.95,
      description: 'Different descriptive text',
      reviews: [],
      canPurchase: true,
      soldOut: false
    }, {
      name: 'Something new',
      price: 4.95,
      description: 'Poo dollar',
      reviews: [
        {
          stars: 5,
          body: "I love this product!",
          author: "phil@shutterfly.com"
        }
      ],
      canPurchase: true,
      soldOut: false
    }
  ];

  meetupApp.controller('PanelController', function() {
    this.tab = 1;
    this.selectTab = function(setTab) {
      return this.tab = setTab;
    };
    return this.isSelected = function(checkTab) {
      return this.tab === checkTab;
    };
  });

  meetupApp.controller('ReviewController', function() {
    this.review = {};
    return this.addReview = function(address) {
      address.reviews.push(this.review);
      return this.review = {};
    };
  });

}).call(this);
